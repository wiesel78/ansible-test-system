services:
  ansible-host:
    container_name: ansible-host
    build:
      context: .
      dockerfile: ansible-host/Containerfile
      args:
        - ROOT_PASSWORD=root
        - ANSIBLE_USER=ansible
        - ANSIBLE_PASSWORD=ansible
    privileged: true
    ports:
      - "2222:22"
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "ss -lnt | grep -q ':22' && systemctl status sshd | grep \"active (running)\""]
      interval: 5s
      timeout: 2s
      retries: 10
      start_period: 5s
    networks:
      ansible:
        ipv4_address: 172.30.0.11
      default:
    dns:
      - 172.30.0.10

  ansible-control:
    container_name: ansible-control
    build:
      context: .
      dockerfile: ansible-control/Containerfile
      args:
        - ROOT_PASSWORD=root
        - ANSIBLE_USER=ansible
        - ANSIBLE_PASSWORD=ansible
    depends_on:
      - ansible-host
    volumes:
      - ./playbooks:/home/ansible/playbooks
    networks:
      ansible:
        ipv4_address: 172.30.0.12
    dns:
      - 172.30.0.10


  ansible-pebble:
    image: ghcr.io/letsencrypt/pebble:latest
    container_name: ansible-pebble
    environment:
      - PEBBLE_VA_NOSLEEP=1
      - PEBBLE_CONFIG=/pebble.json
    volumes:
      - ./pebble.json:/pebble.json
    ports:
      - "14000:14000"
      - "15000:15000"
    #    command: -config /
    networks:
      ansible:
        ipv4_address: 172.30.0.13
    dns:
      - 172.30.0.10

  ansible-coredns:
    image: coredns/coredns:latest
    container_name: ansible-coredns
    networks:
      ansible:
        ipv4_address: 172.30.0.10
    volumes:
      - ./coredns/Corefile:/Corefile:ro
    ports:
      - "8053:53"
      - "8053:53/udp"
    command: ["-conf", "/Corefile"]
    restart: unless-stopped

networks:
  default:
    driver: bridge
  ansible: 
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.30.0.0/16
